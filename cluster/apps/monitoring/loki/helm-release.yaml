---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: loki
      version: 2.9.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    ingress:
      enabled: true
      annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - host: &host "loki.${SECRET_DOMAIN}"
          paths:
            - /
      tls:
        - hosts:
            - *host
    serviceMonitor:
      enabled: true
    config:
      limits_config:
        enforce_metric_name: false
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        ingestion_rate_mb: 16
        ingestion_burst_size_mb: 24
      storage_config:
        aws:
          bucketnames: loki
          endpoint: "s3.${SECRET_PRIVATE_DOMAIN}"
          access_key_id: "${SECRET_ACCESS_MINIO}"
          secret_access_key: "${SECRET_KEY_MINIO}"
          s3forcepathstyle: true
          insecure: false
      ruler:
        storage:
          type: local
          local:
            directory: /rules
        rule_path: /tmp/scratch
        ring:
          kvstore:
            store: inmemory
        enable_api: true
          #     alerting_groups:
          #       #
          #       # SMART Failures
          #       #
          #       - name: smart-failure
          #         rules:
          #           - alert: SmartFailures
          #             expr: |
          #               sum by (hostname) (count_over_time({hostname=~".+"} | json | _SYSTEMD_UNIT = "smartmontools.service" !~ "(?i)previous self-test completed without error" !~ "(?i)Prefailure" |~ "(?i)(error|fail)"[2m])) > 0
          #             for: 10s
          #             labels:
          #               severity: critical
          #               category: logs
          #             annotations:
          #               summary: "SMART has reported failures on host {{ $labels.hostname }}"
          #       #
          #       # *arr
          #       #
          #       - name: arr
          #         rules:
          #           - alert: ArrDatabaseIsLocked
          #             expr: |
          #               sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database is locked"[2m])) > 0
          #             for: 10s
          #             labels:
          #               severity: critical
          #               category: logs
          #             annotations:
          #               summary: "{{ $labels.app }} is experiencing locked database issues"
          #           - alert: ArrDatabaseIsMalformed
          #             expr: |
          #               sum by (app) (count_over_time({app=~".*arr"} |~ "(?i)database disk image is malformed"[2m])) > 0
          #             for: 10s
          #             labels:
          #               severity: critical
          #               category: logs
          #             annotations:
          #               summary: "{{ $labels.app }} is experiencing malformed database disk image issues"
